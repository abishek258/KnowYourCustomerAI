[project]
name = "kyc-extraction"
version = "0.1.0"
description = "KYC Document Processing API using Google Document AI"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # FastAPI and web server
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "python-multipart>=0.0.12",
    # Google Cloud Document AI
    "google-cloud-documentai>=3.6.0",
    "google-cloud-storage>=2.18.0",
    "google-cloud-logging>=3.11.0",
    # Data validation and settings
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",
    # Authentication and security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    # Logging
    "loguru>=0.7.2",
    # HTTP client
    "httpx>=0.27.2",
    # Environment variables
    "python-dotenv>=1.0.1",
    # Image processing
    "Pillow>=11.0.0",
    "pdf2image>=1.17.0",
    # Monitoring
    "prometheus-client>=0.21.0",
    # Retry logic
    "tenacity>=9.0.0",
    # Existing dependencies
    "gradio",
    "pandas",
    "psutil>=7.1.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "black>=25.9.0",
    "httpx>=0.28.1",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.1",
    "safety>=3.6.2",
]

[project.scripts]
kyc-api = "src.api.main:main"

# Development tool configurations
[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [".venv", "gradio_demo"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "C4", "SIM", "RUF"]
ignore = ["E501"]  # Line too long (handled by black)

[tool.black]
line-length = 100
target-version = ['py312']
exclude = '''
/(
    \.venv
    | gradio_demo
)/
'''

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
exclude = [
    "^gradio_demo/",
    "^\\.venv/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "-v",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", ".venv/*", "gradio_demo/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
